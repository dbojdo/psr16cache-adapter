<?php
/**
 * PSR16 Cache Adapter
 *
 * Copyright (c) 2017 http://pudelek.org.pl
 *
 * @license MIT License (MIT)
 *
 * For the full copyright and license information, please view source file
 * that is bundled with this package in the file LICENSE
 *
 * @author  Marcin PudeÅ‚ek <marcin@pudelek.org.pl>
 */


namespace mrcnpdlk\Psr16Cache;


class AdapterTest extends TestCase
{
    /**
     * @var \mrcnpdlk\Psr16Cache\Adapter
     */
    private $oAdapter;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->oAdapter = new Adapter();
    }

    public function testSetCacheInstance()
    {
        $oInstanceLogger = new \Monolog\Logger('name_of_my_logger');
        $oInstanceLogger->pushHandler(new \Monolog\Handler\ErrorLogHandler(
                \Monolog\Handler\ErrorLogHandler::OPERATING_SYSTEM,
                \Psr\Log\LogLevel::DEBUG
            )
        );
        $oInstanceCacheFile = new \phpFastCache\Helper\Psr16Adapter(
            'files',
            [
                "host"                => null, // default localhost
                "port"                => null, // default 6379
                'defaultTtl'          => 3600 * 24, // 24h
                'ignoreSymfonyNotice' => true,
            ]);
        $this->oAdapter->setLoggerInstance($oInstanceLogger);
        $this->oAdapter->setCacheInstance($oInstanceCacheFile);
        $this->assertInstanceOf(\Psr\SimpleCache\CacheInterface::class, $this->oAdapter->getCache());
    }

    public function testUsingCache()
    {
        $res = $this->oAdapter->useCache(
            function () {
                return 1;
            },
            ['key1', 'key2'],
            10
        );
        $this->assertEquals(1, $res);
    }


}
